script(src=url_for("https://cdn.jsdelivr.net/npm/reveal.js@4.0.2/dist/reveal.js"))

- var slide = page.slide || theme.slide
- var defaultSlide = theme.slide
- var mouseWheel = slide.mouseWheel || defaultSlide.mouseWheel 
- var transition = slide.transition || defaultSlide.transition
- var transitionSpeed = slide.transitionSpeed || defaultSlide.transitionSpeed
- var parallaxBackgroundImage = slide.parallaxBackgroundImage || defaultSlide.parallaxBackgroundImage
- var parallaxBackgroundSize = slide.parallaxBackgroundSize || defaultSlide.parallaxBackgroundSize
- var parallaxBackgroundHorizontal = slide.parallaxBackgroundHorizontal || defaultSlide.parallaxBackgroundHorizontal
- var parallaxBackgroundVertical = slide.parallaxBackgroundVertical || defaultSlide.parallaxBackgroundVertical
- var autoSlide = slide.autoSlide || defaultSlide.autoSlide
- var loop = slide.loop || defaultSlide.loop
- var controlsLayout = slide.controlsLayout || defaultSlide.controlsLayout
- var controlsBackArrows = slide.controlsBackArrows || defaultSlide.controlsBackArrows
- var progress = slide.progress || defaultSlide.progress
- var showNotes = slide.showNotes || defaultSlide.showNotes
- var autoPlayMedia = slide.autoPlayMedia || defaultSlide.autoPlayMedia

script.
  Reveal.initialize({
    mouseWheel: !{mouseWheel},
    transition: '!{transition}',
    transitionSpeed: '!{transitionSpeed}',
    parallaxBackgroundImage: '!{parallaxBackgroundImage}',
    parallaxBackgroundSize: '!{parallaxBackgroundSize}',
    parallaxBackgroundHorizontal: '!{parallaxBackgroundHorizontal}',
    parallaxBackgroundVertical: '!{parallaxBackgroundVertical}',
    autoSlide: !{autoSlide},
    loop: !{loop},
    controlsLayout: '!{controlsLayout}', // Determines where controls appear, "edges" or "bottom-right"
    controlsBackArrows: '!{controlsBackArrows}',
    progress: !{progress},
    showNotes: !{showNotes},
    autoPlayMedia: !{autoPlayMedia}
    markdown: {
      smartypants: true
    },
    dependencies: [
      { src: '/js/third-party/reveal/marked.min.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: '/js/third-party/reveal/markdown.min.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      // Syntax highlight for <code> elements
      { src: '/js/third-party/reveal/highlight.min.js', async: true, callback: function() {
        // issue #218
        setTimeout(function () {
          hljs.initHighlighting();
        }, 0)
      } },
      // Zoom in and out with Alt+click
      { src: '/js/third-party/reveal/zoom.min.js', async: true },
      // Speaker notes
      { src: '/js/third-party/reveal/notes.min.js', async: true },
      // MathJax
      { src: '/js/third-party/reveal/math.min.js', async: true },
      // Search
      { src: '/js/third-party/reveal/search.min.js', async: true },
    ]
  });